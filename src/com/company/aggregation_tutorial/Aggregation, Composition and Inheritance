Link: https://www.studytonight.com/java/aggregation.php#:~:text=Aggregation%20is%20a%20term%20which,way%20relationship%20between%20two%20objects.&text=In%20Java%2C%20aggregation%20represents%20HAS,class%20known%20to%20have%20aggregation.

1) Aggregation: (Has A)
Aggregation is a term which is used to refer one way relationship between two objects. For example, Student class can have reference of Address class but vice versa does not make sense.
In Java, aggregation represents HAS-A relationship, which means when a class contains reference of another class known to have aggregation.
The HAS-A relationship is based on usage, rather than inheritance. In other words, class A has-a relationship with class B, if class A has a reference to an instance of class B.
Lets understand it by an example and consider two classes Student and Address. Each student has own address that makes has-a relationship but address has student not makes any sense. We can understand it more clearly using Java code.

Example 2: Aws has feature called Pay per Compute
Explaination: So all the definition of PayPerCompute.class can be used as it is in Aws class, this will provide Aws users,
with the facility of paying to only those service as per there computation requirement.


2) Composition: (Is a)
Composition is a more restricted form of Aggregation. Composition can be described as when one class which includes another class, is dependent on it in such a way that it cannot functionally exist without the class which is included. For example a class Car cannot exist without Engine, as it won't be functional anymore.
Hence the word Composition which means the items something is made of and if we change the composition of things they change, similarly in Java classes, one class including another class is called a composition if the class included provides core functional meaning to the outer class.

Example 2: Aws provides infrastructure is a code facility
Explaination: So lets say you have complex infrastucture  with is capable of realtime indexing, DR Compatible, protable to various regions.
Now this requirement, will involve a lots of resources for eg (Lamda, Kubernetes, Fargate, ECS etc) and then you would have you own application depencencies requirement as well
where you have to contomize these services based on your app needs.

So in such situation AWS provides this facility of Infrastucture is a code with the help of Cloud Development Kit.
Here you can code your infrasture based upon the Enviorment based requirement as make it Dynamic for various regions


3) When to use Inheritance and Aggregation?
When you want to use some property or behaviour of any class without the requirement of modifying it or adding more functionality to it, in such case Aggregation is a better option because in case of Aggregation we are just using any external class inside our class as a variable.
Whereas when you want to use and modify some property or behaviour of any external class or may be want to add more function on top of it, its best to use Inheritance.
To understand more on inheritance, you can visit our detailed tutorial here.